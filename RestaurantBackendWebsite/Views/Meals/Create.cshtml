@model RestaurantBackendWebsite.Models.ViewModels.MealIndexVM

@{
    ViewBag.Title = "新增餐點";
}

<h2>新增餐點</h2>


@using (Html.BeginForm("Create", "Meals", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3">
            @Html.LabelFor(model => model.CategoryName, "類別", htmlAttributes: new { @class = "form-label col-md-2" })
            @Html.DropDownList("CategoryId", ViewBag.CategoryId as SelectList, "請選擇", new { @class = " form-select" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label col-md-2" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label col-md-2" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label col-md-2" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">上下架狀態</label>
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            <label for="formFile" class="form-label">餐點照片</label>
            <input class="form-control" type="file" name="myfile" id="formFile">
            @Html.ValidationMessage("myfile", "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="mb-3 text-end">
        <div class="text-end">
            <input type="submit" value="新增" class="btn btn-primary" />
            @Html.ActionLink("回到餐點清單頁", "Index", null, new { @class = "btn btn-success" })

        </div>
    </div>

}

<div>

</div>
@*@Styles.Render("~/Content/Meals.css")*@

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="path/to/jquery.validate.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
}

